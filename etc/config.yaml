redis:
  host: 192.168.91.1
  port: 6379
  db: 0

config_type: redis

gw:
  node_listen: 9080              # listening port
  enable_heartbeat: true
  enable_debug: false
  enable_dev_mode: true          # Sets nginx worker_processes to 1 if set to true
  enable_reuseport: true          # Enable nginx SO_REUSEPORT switch if set to true.
  enable_ipv6: true
    # yaml: fetch the config value from local yaml file `/your_path/conf/gw.yaml`

    #proxy_protocol:                 # Proxy Protocol configuration
    #  listen_http_port: 9181        # The port with proxy protocol for http, it differs from node_listen and port_admin.
    # This port can only receive http request with proxy protocol, but node_listen & port_admin
    # can only receive http request. If you enable proxy protocol, you must use this port to
  # receive http request with proxy protocol
  #  listen_https_port: 9182       # The port with proxy protocol for https
  #  enable_tcp_pp: true           # Enable the proxy protocol for tcp proxy, it works for stream_proxy.tcp option
  #  enable_tcp_pp_to_upstream: true # Enables the proxy protocol to the upstream server

  # allow_admin:                  # http://nginx.org/en/docs/http/ngx_http_access_module.html#allow
  #   - 127.0.0.0/24              # If we don't set any IP list, then any IP access is allowed by default.
  #   - "::/64"
  # port_admin: 9180              # use a separate port
  stream_proxy:                 # TCP/UDP proxy
     tcp:                        # TCP proxy port list
       - 3306
     #udp:                        # UDP proxy port list
     #  - 9200
     #  - 9211
  dns_resolver:                   # default DNS resolver, with disable IPv6 and enable local DNS
    - 114.114.114.114
    - 223.5.5.5
    - 1.1.1.1
    - 8.8.8.8

  ssl:
    enable: true
    enable_http2: true
    listen_port: 9443
    ssl_protocols: "TLSv1 TLSv1.1 TLSv1.2 TLSv1.3"
    ssl_ciphers: "ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA256:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA"

nginx_config:                     # config for render the template to genarate nginx.conf
  error_log: "logs/error.log"
  error_log_level: "warn"         # warn,error
  worker_rlimit_nofile: 20480     # the number of files a worker process can open, should be larger than worker_connections
  event:
    worker_connections: 10620

log:
#  rsyslog:
#    host: 127.0.0.1
#    port: 514
#    type: tcp
#    access_log: 1
#    rule_log: 1
#  kafka:
#    broker:
#      -
#        host: 127.0.0.1
#        port: 9092
#      -
#        host: 192.168.91.100
#        port: 9092
#    access_topic: yulv_access
#    rule_topic: yulv_rule
  file:
    access_log: 1
    rule_log: 1

#etcd:
#  host: "http://127.0.0.1:2379"   # etcd address
#  prefix: "/apisix"               # apisix configurations prefix
#  timeout: 3                      # 3 seconds

